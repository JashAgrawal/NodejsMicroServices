#!/usr/bin/env node

const http = require("http");
const axios = require("axios");
const config = require("../config")[process.env.NODE_ENV || "development"];

const log = config.log();
const app = require("../services/service")(config);

const server = http.createServer(app);

server.listen(60354);

server.on("listening", async () => {
  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${app.get(
      "env"
    )} mode.`
  );
  const registerService = async () =>
    await axios.put(
      `${config.registryUrl}/register/${config.name}/${config.version}/${
        server.address().port
      }`
    );
  const unregisterService = async () =>
    await axios.delete(
      `${config.registryUrl}/unregister/${config.name}/${config.version}/${
        server.address().port
      }`
    );

  await registerService();
  const heartbeat = setInterval(registerService, 25 * 1000);
  const cleanup = async () => {
    clearInterval(heartbeat);
    await unregisterService();
  };

  process.on("uncaughtException", async () => {
    await cleanup();
    process.exit(0);
  });
  process.on("SIGINT", async () => {
    await cleanup();
    process.exit(0);
  });
  process.on("SIGTERM", async () => {
    await cleanup();
    process.exit(0);
  });
});
